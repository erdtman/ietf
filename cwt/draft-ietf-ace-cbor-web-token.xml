<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE rfc SYSTEM "rfc2629.dtd">

<?xml-stylesheet type='text/xsl' href='http://xml2rfc.tools.ietf.org/authoring/rfc2629.xslt' ?>
<?rfc toc="yes"?>
<?rfc tocdepth="4"?>
<?rfc symrefs="yes"?>
<?rfc sortrefs="yes"?>
<?rfc strict="yes"?>
<?rfc compact="yes"?>
<?rfc subcompact="no"?>

<rfc category="std" ipr="trust200902" docName="draft-ietf-ace-cbor-web-token-04">

  <front>
    <title abbrev="CBOR Web Token">CBOR Web Token (CWT)</title>

    <author fullname="Michael B. Jones" initials="M.B." surname="Jones">
      <organization>Microsoft</organization>
      <address>
        <email>mbj@microsoft.com</email>
        <uri>http://self-issued.info/</uri>
      </address>
    </author>

    <author initials="E." surname="Wahlström" fullname="Erik Wahlström">
      <organization></organization>
      <address>
        <postal>
          <street></street>
          <city></city>
          <code></code>
          <country>Sweden</country>
        </postal>
        <phone></phone>
        <email>erik@wahlstromstekniska.se</email>
      </address>
    </author>

    <author fullname="Samuel Erdtman" initials="S.E." surname="Erdtman">
      <organization>Spotify AB</organization>
      <address>
      	<postal>
      	  <street>Birger Jarlsgatan 61, 4tr</street>
      	  <city>Stockholm</city>
      	  <region></region>
      	  <code>113 56</code>
      	  <country>Sweden</country>
      	</postal>
      	<phone>+46702691499</phone>
      	<email>erdtman@spotify.com</email>
      </address>
    </author>

    <author fullname="Hannes Tschofenig" initials="H." surname="Tschofenig">
      <organization>ARM Ltd.</organization>
      <address>
        <postal>
          <street></street>
          <code>6060</code> <city>Hall in Tirol</city>
          <country>Austria</country>
        </postal>
        <email>Hannes.Tschofenig@arm.com</email>
      </address>
    </author>

    <date day="13" month="April" year="2017" />

    <area>Security</area>
    <workgroup>ACE Working Group</workgroup>

    <keyword>Internet-Draft</keyword>
    <keyword>JSON Web Token</keyword>
    <keyword>JWT</keyword>
    <keyword>Claims</keyword>
    <keyword>CBOR</keyword>
    <keyword>COSE</keyword>
    <keyword>OAuth</keyword>
    <keyword>ACE</keyword>

    <abstract>
      <t>
        CBOR Web Token (CWT) is a compact means of representing claims to be
        transferred between two parties.  CWT is a profile of the JSON Web
        Token (JWT) that is optimized for constrained devices. The claims in a
        CWT are encoded in the Concise Binary Object Representation (CBOR) and
        CBOR Object Signing and Encryption (COSE) is used for added application
        layer security protection.  A claim is a piece of information asserted
        about a subject and is represented as a name/value pair consisting of a
        claim name and a claim value.
      </t>
    </abstract>

  </front>

  <middle>

    <!-- ====================================================================== -->

    <section anchor="Introduction" title="Introduction">

      <t>
        The JSON Web Token (JWT) <xref target="RFC7519"/> is a standardized security token format
        that has found use in OAuth 2.0 and OpenID Connect deployments, among other applications.
	JWT uses JSON Web Signature (JWS) <xref target="RFC7515"/> and
	JSON Web Encryption (JWE) <xref target="RFC7516"/> to secure the contents of the JWT,
	which is a set of claims represented in JSON.
	The use of JSON for encoding information is popular for
        Web and native applications, but it is considered inefficient for some
        Internet of Things (IoT) systems that use low power radio technologies.
      </t>

      <t>
        An alternative encoding of claims is defined in this document. Instead
        of using JSON, as provided by JWTs, this specification uses
        CBOR <xref target="RFC7049"/> and calls this new structure "CBOR Web Token (CWT)", which is a
        compact means of representing secured claims to be transferred between two
        parties. CWT is closely related to JWT. It references the JWT claims
        and both its name and pronunciation are derived from JWT. To protect the
        claims contained in CWTs, the CBOR Object Signing and Encryption (COSE)
	<xref target="I-D.ietf-cose-msg"/>
        specification is used.
      </t>

      <t>
        The suggested pronunciation of CWT is the same as the English word
        "cot".
      </t>

    </section>

    <!-- /////////////////////////////////////////////////////////////////////// -->

    <section anchor="Terminology" title="Terminology">
      <t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
       "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED", "MAY", and "OPTIONAL" in this
       document are to be interpreted as described in "Key words for use in
       RFCs to Indicate Requirement Levels" <xref target="RFC2119"/>.</t>

       <t>
         This document reuses terminology from JWT
         <xref target="RFC7519"/> and COSE <xref target="I-D.ietf-cose-msg" />.
       </t>

      <t>
        <list style="hanging">
          <t hangText="StringOrURI:">
	    <vspace/>
            The "StringOrURI" term has the same meaning, syntax, and
            processing rules as the "StringOrUri" term defined in Section 2
            of JWT <xref target="RFC7519" />, except that a CWT StringOrURI uses
            CBOR major type 3 (text string) instead of a JSON string value.
           </t>

          <t hangText="NumericDate:">
             <vspace/>
             The "NumericDate" term has the same meaning, syntax and
             Processing rules as the "NumericDate" term defined in Section 2 of
             JWT <xref target="RFC7519" />, except that the CBOR numeric
             representation (Section 2.4.1 of <xref target="RFC7049"/>) is used.
             The encoding is modified so that the leading tag (6.1 or 0xC1) MUST
             be omitted.
          </t>

          <t hangText="CBOR encoded claim key:">
	    <vspace/>
            The key used to identify a claim value.
          </t>

          <t hangText="CWT Claims Set">
	    <vspace/>
	    A CBOR map that contains the claims conveyed by the CWT.
	  </t>

        </list>
      </t>

    </section>

    <section anchor="Claims" title="Claims">
      <t>
        The set of claims that a CWT must contain to be considered valid is
        context dependent and is outside the scope of this specification.
        Specific applications of CWTs will require implementations to
        understand and process some claims in particular ways.  However, in
        the absence of such requirements, all claims that are not understood
        by implementations MUST be ignored.
      </t>

      <t>
        To keep CWTs as small as possible, the CBOR encoded claim keys are
        represented using CBOR major type 0.
        <xref target="CWTCNMajorTypesSummary" /> summarizes all keys
	used to identify the claims defined in this document.
      </t>

      <section anchor="CWTClaimNames" title="Claim Names">

         <t>
           None of the claims defined below are intended to be
           mandatory to use or implement. They rather provide
           a starting point for a set of useful, interoperable claims.
           Applications using CWTs should define which specific claims they
           use and when they are required or optional.
         </t>

         <section anchor="CWTCNiss" title="iss (Issuer) Claim">
            <t>
              The <spanx style="verb">iss</spanx> (issuer) claim has the same meaning, syntax, and
              processing rules as the <spanx style="verb">iss</spanx> claim defined in Section 4.1.1
              of JWT <xref target="RFC7519" />, except that the format MUST be a
              StringOrURI. The CBOR encoded claim key 1 MUST be used to
              identify this claim.
            </t>
         </section>

         <section anchor="CWTCNsub" title="sub (Subject) Claim">
            <t>
              The <spanx style="verb">sub</spanx> (subject) claim has the same meaning, syntax, and
              processing rules as the <spanx style="verb">sub</spanx> claim defined in Section 4.1.2
              of JWT <xref target="RFC7519" />, except that the format MUST be a
              StringOrURI. The CBOR encoded claim key 2 MUST be used to
              identify this claim.
            </t>
          </section>

          <section anchor="CWTCNaud" title="aud (Audience) Claim">
            <t>
              The <spanx style="verb">aud</spanx> (audience) claim has the same meaning, syntax, and
              processing rules as the <spanx style="verb">aud</spanx> claim defined in Section 4.1.3
              of JWT <xref target="RFC7519" />, except that the format MUST be a
              StringOrURI. The CBOR encoded claim key 3 MUST be used to
              identify this claim.
            </t>
          </section>

          <section anchor="CWTCNexp" title="exp (Expiration Time) Claim">
            <t>
              The <spanx style="verb">exp</spanx> (expiration time) claim has the same meaning, syntax,
              and processing rules as the <spanx style="verb">exp</spanx> claim defined in Section
              4.1.4 of JWT <xref target="RFC7519" />, except that the format
              MUST be a NumericDate. The CBOR encoded claim key 4 MUST be
              used to identify this claim.
            </t>
          </section>

          <section anchor="CWTCNnbf" title="nbf (Not Before) Claim">
            <t>
              The <spanx style="verb">nbf</spanx> (not before) claim has the same meaning, syntax,
              and processing rules as the <spanx style="verb">nbf</spanx> claim defined in Section
              4.1.5 of JWT <xref target="RFC7519" />, except that the format
              MUST be a NumericDate. The CBOR encoded claim key 5 MUST be
              used to identify this claim.
            </t>
          </section>

          <section anchor="CWTCNiat" title="iat (Issued At) Claim">
            <t>
              The <spanx style="verb">iat</spanx> (issued at) claim has the same meaning, syntax,
              and processing rules as the <spanx style="verb">iat</spanx> claim defined in Section
              4.1.6 of JWT <xref target="RFC7519" />, except that the format
              MUST be a NumericDate. The CBOR encoded claim key 6 MUST be
              used to identify this claim.
            </t>
          </section>

          <section anchor="CWTCNcti" title="cti (CWT ID) Claim">
            <t>
              The <spanx style="verb">cti</spanx> (CWT ID) claim has the same meaning, syntax,
              and processing rules as the <spanx style="verb">jti</spanx> claim defined in Section
              4.1.7 of JWT <xref target="RFC7519" />, except that the format
              MUST be of major type 2, binary string. The
              CBOR encoded claim key 7 MUST be used to identify this claim.
            </t>
          </section>

      </section>

    </section>


    <section anchor="CWTCNMajorTypesSummary"
       title="Summary of the values, CBOR major types and encoded claim keys">

      <t>
        <figure align="center" anchor="fig:cborMappingValuesAccessTokens"
                title="Summary of the values, CBOR major types and encoded claim keys.">
          <artwork><![CDATA[
/---------+------------------------+-------------------------------\
| Claim   | CBOR encoded claim key | CBOR major type of value      |
|---------+------------------------+-------------------------------|
| iss     | 1                      | 3                             |
| sub     | 2                      | 3                             |
| aud     | 3                      | 3                             |
| exp     | 4                      | 0, 1, or 7 with float subtype |
| nbf     | 5                      | 0, 1, or 7 with float subtype |
| iat     | 6                      | 0, 1, or 7 with float subtype |
| cti     | 7                      | 2                             |
\---------+------------------------+-------------------------------/
]]></artwork>
        </figure>
      </t>

    </section>

    <section anchor="TaggedValues" title="CBOR Tags and Claim Values">
      <t>
        The claim values defined in this specification MUST NOT be prefix with
        any CBOR tag.  For instance, while CBOR tag 6.1
        (seconds-since-the-epoch) could logically be prefixed to values of the
        <spanx style="verb">exp</spanx>, <spanx style="verb">nbf</spanx>, and
        <spanx style="verb">iat</spanx> claims, this is unnecessary, since the
        representation of the claim values is already specified by the claim
        definitions. Tagging claim values would only take up extra space,
        without adding information.  However, this does not prohibit future
        claim definitions from requiring the use of CBOR tags for those
        specific claims.
      </t>
    </section>

    <section anchor="CWTCBORTag" title="CWT CBOR Tag">
      <t>
	How to determine that a CBOR data structure is a CWT is application-dependent.
	In some cases, this information is known from the application context,
	such as from the position of the CWT in a data structure at which the value must be a CWT.
	One method of indicating that a CBOR object is a CWT is the use of
	the "application/cwt" content type by a transport protocol.
      </t>
      <t>
	This section defines the CWT CBOR tag as another means for applications to
	declare that a CBOR data structure is a CWT.
	Its use is optional, and is intended for use in cases in which
	this information would not otherwise be known.
      </t>
      <t>
        If present, the CWT tag MUST prefix a tagged object using one of the COSE CBOR tags.
	In this example, the COSE_Mac0 tag is used.
        The actual COSE_Mac0 object has been excluded from this example.
        <figure align="center" anchor="fig:CWTTagExample"
            title='Example of a CWT tag usage'>
            <artwork align="left"><![CDATA[
/ CWT CBOR tag / 61(
  / COSE_Mac0 CBOR tag / 17(
    / COSE_Mac0 object /
  )
)
]]></artwork>
        </figure>
      </t>
    </section>

    <section anchor="CreatingValidatingCWTs" title="Creating and Validating CWTs">

      <section anchor="CreatingCWT" title="Creating a CWT">
        <t>
          To create a CWT, the following steps are performed.  The order of the
          steps is not significant in cases where there are no dependencies
          between the inputs and outputs of the steps.
        </t>
        <t>
        <list style="numbers">
          <t>
            Create a CWT Claims Set containing the desired claims.
          </t>
          <t>
            Let the Message be the binary representation of the CWT Claims Set.
          </t>
          <t>
            Create a COSE Header containing the desired set of Header
            Parameters.  The COSE Header MUST be valid per the
            <xref target="I-D.ietf-cose-msg"/> specification.
          </t>
          <t>
            Depending upon whether the CWT is signed, MACed, or encrypted,
            there are three cases:
            <list style="symbols">
              <t>
                If the CWT is signed, create a COSE_Sign/COSE_Sign1 object
                using the Message as the COSE_Sign/COSE_Sign1 Payload; all
                steps specified in <xref target="I-D.ietf-cose-msg" /> for
                creating a COSE_Sign/COSE_Sign1 object MUST be followed.
              </t>
              <t>
                Else, if the CWT is MACed, create a COSE_Mac/COSE_Mac0 object
                using the Message as the COSE_Mac/COSE_Mac0 Payload; all
                steps specified in <xref target="I-D.ietf-cose-msg" /> for
                creating a COSE_Mac/COSE_Mac0 object MUST be followed.
              </t>
              <t>
                Else, if the CWT is a COSE_Encrypt/COSE_Encrypt0 object,
                create a COSE_Encrypt/COSE_Encrypt0 using the Message as
                the plaintext for the COSE_Encrypt/COSE_Encrypt0 object;
                all steps specified in <xref target="I-D.ietf-cose-msg" />
                for creating a COSE_Encrypt/COSE_Encrypt0 object MUST be
                followed.
              </t>
            </list>
          </t>
          <t>
              If a nested signing, MACing or encryption operation will be
              performed, let the Message be the COSE_Sign/COSE_Sign1,
              COSE_Mac/COSE_Mac0 or COSE_Encrypt/COSE_Encrypt0, and
              return to Step 3, using a "content type" header value
              corresponding to the media type "application/cwt" in the new
              COSE Header created in that step.
          </t>
          <t>
	    If needed by the application, add the appropriate COSE CBOR tag
	    to the COSE object to indicate type of COSE object.
	    If also needed by the application, add the CWT CBOR tag
	    to indicate that the COSE object is a CWT.
          </t>
        </list>
      </t>
      </section>
      <section anchor="ValidatingCWT" title="Validating a CWT">
        <t>
          When validating a CWT, the following steps are performed.  The order
          of the steps is not significant in cases where there are no
          dependencies between the inputs and outputs of the steps.  If any of
          the listed steps fail, then the CWT MUST be rejected -- that is,
          treated by the application as invalid input.
        </t>
        <t>
          <list style="numbers">
            <t>
              Verify that the CWT is a valid CBOR object.
            </t>
            <t>
              If the object begins with the CWT CBOR tag, remove it
	      and verify that one of the COSE CBOR tags follows it.
	    </t>
	    <t>
	      If the object is tagged with one of the COSE CBOR tags, remove it
	      and verify that it corresponds to the structure of the following COSE object.
            </t>
            <t>
              Verify that the resulting COSE Header includes only parameters
              and values whose syntax and semantics are both understood and
              supported or that are specified as being ignored when not
              understood.
            </t>
            <t>
              Use the CBOR tag to determine the type of the CWT,
              COSE_Sign/COSE_Sign1, COSE_Mac/COSE_Mac0, or
              COSE_Encrypt/COSE_Encrypt0.
            </t>
            <t>
              Depending upon whether the CWT is a signed, MACed, or encrypted,
              there are three cases:
              <list style="symbols">
                <t>
                  If the CWT is a COSE_Sign/COSE_Sign1, follow the steps
                  specified in <xref target="I-D.ietf-cose-msg" /> Section 4
                  (Signing Objects) for validating a COSE_Sign/COSE_Sign1
                  object.  Let the Message be the COSE_Sign/COSE_Sign1 payload.
                </t>
                <t>
                  Else, if the CWT is a COSE_Mac/COSE_Mac0, follow the steps
                  specified in <xref target="I-D.ietf-cose-msg" /> Section 6
                  (MAC Objects) for validating a COSE_Mac/COSE_Mac0 object.
                  Let the Message be the COSE_Mac/COSE_Mac0 payload.
                </t>
                <t>
                  Else, if the CWT is a COSE_Encrypt/COSE_Encrypt0 object,
                  follow the steps specified in
                  <xref target="I-D.ietf-cose-msg" /> Section 5 (Encryption
                  Objects) for validating a COSE_Encrypt/COSE_Encrypt0 object.
                  Let the Message be the resulting plaintext.
                </t>
              </list>
            </t>
            <t>
              If the COSE Header contains a "content type" header value
              corresponding to the media type "application/cwt", then
              the Message is a CWT that was the subject of nested signing
              or encryption operations.  In this case, return to Step 1,
              using the Message as the CWT.
            </t>
            <t>
              Verify that the Message is a valid CBOR object; let the CWT Claims Set be this CBOR object.
            </t>
          </list>
        </t>
      </section>
    </section>

    <section anchor="Security" title="Security Considerations">

      <t>
	The security of the CWT is dependent on the protections offered by COSE.
	Unless the claims in a CWT are protected, an adversary can modify, add, or remove claims.
	Since the claims conveyed in a CWT may be used to make authorization decisions,
	it is not only important to protect the CWT in transit but also to ensure that
	the recipient can authenticate the party that assembled the claims and created the CWT.
	Without trust of the recipient in the party that created the CWT, no sensible authorization decision can be made.
	Furthermore, the creator of the CWT needs to carefully evaluate each claim value prior to including it in the CWT
	so that the recipient can be assured of the validity of the information provided.
      </t>

    </section>

    <!-- /////////////////////////////////////////////////////////////////////// -->

    <section anchor="IANA" title="IANA Considerations">


      <section anchor="IANACWTClaimsRegistry" title="CBOR Web Token (CWT) Claims Registry">
	<t>
	  This section establishes the
	  IANA "CBOR Web Token (CWT) Claims" registry.
	</t>
	<t>
	  Values are registered on a Specification Required
	  <xref target="RFC5226"/> basis, on the advice of one or more Designated Experts.
	  However, to allow for the
	  allocation of values prior to publication, the Designated Experts may approve
	  registration once they are satisfied that such a specification will be published.
	</t>
	<t>
	  Criteria that should be applied by the Designated Experts includes
	  determining whether the proposed registration duplicates existing functionality,
	  whether it is likely to be of general applicability
	  or whether it is useful only for a single application,
	  and whether the registration description is clear.
	</t>

	<section anchor="IANACWTClaimsKeyRegistryTemplate" title="Registration Template">
	  <t>
	    <list style='hanging'>
	      <t hangText='Claim Name:'>
                <vspace/>
                The human-readable name requested (e.g., "iss").
              </t>
              <t hangText='Claim Description:'>
                <vspace/>
                Brief description of the claim (e.g., "Issuer").
              </t>
	      <t hangText='JWT Claim Name:'>
		<vspace/>
		Claim Name of the equivalent JWT claim, as registered in <xref target="IANA.JWT.Claims"/>.
		CWT claims should normally have a corresponding JWT claim.
		If a corresponding JWT claim would not make sense,
		the Designated Experts can choose to accept registrations
		for which the JWT Claim Name is listed as "N/A".
	      </t>
	      <t hangText='CBOR Key Value:'>
		<vspace/>
		Key value for the claim.  The key value MUST be an integer in the range of 1 to 65536.
	      </t>
	      <t hangText='CBOR Major Type:'>
		<vspace/>
		CBOR major type and optional tag for the claim.
	      </t>
	      <t hangText='Change Controller:'>
		<vspace/>
		For Standards Track RFCs, list the "IESG". For others, give the name of the responsible party. Other details (e.g., postal address, email address, home page URI) may also be included.
	      </t>
	      <t hangText='Specification Document(s):'>
		<vspace/>
		Reference to the document or documents that specify the parameter, preferably including URIs that can be used to retrieve copies of the documents. An indication of the relevant sections may also be included but is not required.
	      </t>
	    </list>
	  </t>
	</section>

	<section anchor="IANACWTClaimsKeyRegistryInitial" title="Initial Registry Contents">
	  <t>
	    <?rfc subcompact="yes"?>
	    <list style='symbols'>
	      <t>Claim Name: <spanx style="verb">iss</spanx></t>
	      <t>Claim Description: Issuer</t>
	      <t>JWT Claim Name: <spanx style="verb">iss</spanx></t>
	      <t>CBOR Key Value: 1</t>
	      <t>CBOR Major Type: 3</t>
	      <t>Change Controller: IESG</t>
	      <t>Specification Document(s): <xref target="CWTCNiss"/> of [[ this specification ]]</t>
	    </list>
	  </t>
	  <t>
	    <list style='symbols'>
	      <t>Claim Name: <spanx style="verb">sub</spanx></t>
	      <t>Claim Description: Subject</t>
	      <t>JWT Claim Name: <spanx style="verb">sub</spanx></t>
	      <t>CBOR Key Value: 2</t>
	      <t>CBOR Major Type: 3</t>
	      <t>Change Controller: IESG</t>
	      <t>Specification Document(s): <xref target="CWTCNsub"/> of [[ this specification ]]</t>
	    </list>
	  </t>
	  <t>
	    <list style='symbols'>
	      <t>Claim Name: <spanx style="verb">aud</spanx></t>
	      <t>Claim Description: Audience</t>
	      <t>JWT Claim Name: <spanx style="verb">aud</spanx></t>
	      <t>CBOR Key Value: 3</t>
	      <t>CBOR Major Type: 3</t>
	      <t>Change Controller: IESG</t>
	      <t>Specification Document(s): <xref target="CWTCNaud"/> of [[ this specification ]]</t>
	    </list>
	  </t>
	  <t>
	    <list style='symbols'>
	      <t>Claim Name: <spanx style="verb">exp</spanx></t>
	      <t>Claim Description: Expiration Time</t>
	      <t>JWT Claim Name: <spanx style="verb">exp</spanx></t>
	      <t>CBOR Key Value: 4</t>
	      <t>CBOR Major Type: 0, 1, or 7 with subtypes 25, 26, or 27</t>
	      <t>Change Controller: IESG</t>
	      <t>Specification Document(s): <xref target="CWTCNexp"/> of [[ this specification ]]</t>
	    </list>
	  </t>
	  <t>
	    <list style='symbols'>
	      <t>Claim Name: <spanx style="verb">nbf</spanx></t>
	      <t>Claim Description: Not Before</t>
	      <t>JWT Claim Name: <spanx style="verb">nbf</spanx></t>
	      <t>CBOR Key Value: 5</t>
	      <t>CBOR Major Type: 0, 1, or 7 with subtypes 25, 26, or 27</t>
	      <t>Change Controller: IESG</t>
	      <t>Specification Document(s): <xref target="CWTCNnbf"/> of [[ this specification ]]</t>
	    </list>
	  </t>
	  <t>
	    <list style='symbols'>
	      <t>Claim Name: <spanx style="verb">iat</spanx></t>
	      <t>Claim Description: Issued At</t>
	      <t>JWT Claim Name: <spanx style="verb">iat</spanx></t>
	      <t>CBOR Key Value: 6</t>
	      <t>CBOR Major Type: 0, 1, or 7 with subtypes 25, 26, or 27</t>
	      <t>Change Controller: IESG</t>
	      <t>Specification Document(s): <xref target="CWTCNiat"/> of [[ this specification ]]</t>
	    </list>
	  </t>
	  <t>
	    <list style='symbols'>
	      <t>Claim Name: <spanx style="verb">cti</spanx></t>
	      <t>Claim Description: CWT ID</t>
	      <t>JWT Claim Name: <spanx style="verb">jti</spanx></t>
	      <t>CBOR Key Value: 7</t>
	      <t>CBOR Major Type: 2</t>
	      <t>Change Controller: IESG</t>
	      <t>Specification Document(s): <xref target="CWTCNcti"/> of [[ this specification ]]</t>
	    </list>
	  </t>

	</section>
	<?rfc subcompact="no"?>

      </section>


      <section title="Media Type Registration" anchor="MediaReg">
	<t>
	  This section registers the <spanx
	  style="verb">application/cwt</spanx> media type
	  in the "Media Types" registry <xref target="IANA.MediaTypes"/>
	  in the manner described in <xref target="RFC6838">RFC 6838</xref>,
	  which can be used to indicate that the content is a CWT.
	</t>
	<section title="Registry Contents" anchor="MediaContents">
	  <t> <?rfc subcompact="yes"?>
	    <list style="symbols">
	      <t>
		Type name: application
	      </t>
	      <t>
		Subtype name: cwt
	      </t>
	      <t>
		Required parameters: N/A
	      </t>
	      <t>
		Optional parameters: N/A
	      </t>
	      <t>
		Encoding considerations: binary
	      </t>
	      <t>
		Security considerations: See the Security Considerations section of [[ this specification ]]
	      </t>
	      <t>
		Interoperability considerations: N/A
	      </t>
	      <t>
		Published specification: [[ this specification ]]
	      </t>
	      <t>
		Applications that use this media type:
		IoT applications sending security tokens over HTTP(S) and other transports.
	      </t>
	      <t>
		Fragment identifier considerations: N/A
	      </t>
	      <t>
		Additional information:<list style="empty">
	        <t>Magic number(s): N/A</t>
		<t>File extension(s): N/A</t>
		<t>Macintosh file type code(s): N/A </t></list>
<vspace/>
	      </t>
	      <t>
		Person &amp; email address to contact for further information:
<vspace/>
		IESG, iesg@ietf.org
	      </t>
	      <t>
		Intended usage: COMMON
	      </t>
	      <t>
		Restrictions on usage: none
	      </t>
	      <t>
		Author: Michael B.&nbsp;Jones, mbj@microsoft.com
	      </t>
	      <t>
		Change controller: IESG
	      </t>
	      <t>
		Provisional registration? No
	      </t>
	    </list>
	  </t>
	</section>
	<?rfc subcompact="no"?>
      </section>

      <section anchor="IANACoAPContentFormatRegistration" title="CoAP Content-Formats Registration">
        <t>
          This section registers the CoAP Content-Format ID for the "application/cwt" media type
	  in the "CoAP Content-Formats" registry <xref target="IANA.CoAP.Content-Formats"/>.
        </t>

	<section anchor="CoAPreg" title="Registry Contents">
	  <t>
	    <?rfc subcompact="yes"?>
	    <list style='symbols'>
	      <t>Media Type: application/cwt</t>
	      <t>Encoding: - </t>
	      <t>Id: TBD (maybe 61) </t>
	      <t>Reference: [[ this specification ]]</t>
	    </list>
	  </t>
	</section>
	<?rfc subcompact="no"?>
      </section>

      <section anchor="IANACBORTagAssignment" title="CBOR Tag registration">
	<t>
	  This section registers the CWT CBOR tag
	  in the "CBOR Tags" registry <xref target="IANA.CBOR.Tags"/>.
	</t>

	<section anchor="CBORTagReg" title="Registry Contents">
	  <t>
	    <?rfc subcompact="yes"?>
	    <list style='symbols'>
	      <t>CBOR Tag: TBD (maybe 61 to use the same value as the Content-Format)</t>
	      <t>Data Item: CBOR Web Token (CWT)</t>
	      <t>Semantics: CBOR Web Token (CWT), as defined in [[ this specification ]]</t>
	      <t>Reference: [[ this specification ]]</t>
	      <t>Point of Contact: Michael B. Jones, mbj@microsoft.com</t>
	    </list>
	  </t>
	</section>
	<?rfc subcompact="no"?>
      </section>
    </section>

    <!-- /////////////////////////////////////////////////////////////////////// -->

  </middle>

  <back>
    <references title='Normative References'>
      <?rfc include='http://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.2119.xml' ?>
      <?rfc include='http://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7049.xml' ?>
      <?rfc include='http://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7519.xml' ?>
      <?rfc include="http://xml2rfc.tools.ietf.org/public/rfc/bibxml3/reference.I-D.draft-ietf-cose-msg-24"?>

      <reference anchor="IANA.MediaTypes" target="http://www.iana.org/assignments/media-types">
        <front>
          <title>Media Types</title>
          <author>
            <organization>IANA</organization>
          </author>
	  <date/>
        </front>
      </reference>

      <reference anchor="IANA.CoAP.Content-Formats" target="http://www.iana.org/assignments/core-parameters/core-parameters.xhtml#content-formats">
        <front>
          <title>CoAP Content-Formats</title>
          <author>
            <organization>IANA</organization>
          </author>
	  <date/>
        </front>
      </reference>

      <reference anchor="IANA.CBOR.Tags" target="http://www.iana.org/assignments/cbor-tags/cbor-tags.xhtml">
        <front>
          <title>Concise Binary Object Representation (CBOR) Tags</title>
          <author>
            <organization>IANA</organization>
          </author>
	  <date/>
        </front>
      </reference>

    </references>

    <references title='Informative References'>
      <?rfc include='http://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.5226.xml' ?>
      <?rfc include='http://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.6838.xml' ?>
      <?rfc include='http://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7515.xml' ?>
      <?rfc include='http://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7516.xml' ?>


      <reference anchor="IANA.JWT.Claims" target="http://www.iana.org/assignments/jwt">
        <front>
          <title>JSON Web Token Claims</title>
          <author>
            <organization>IANA</organization>
          </author>
	  <date/>
        </front>
      </reference>

    </references>

    <section anchor="Examples" title="Examples">
      <t>
	This appendix includes a set of CWT examples that show how the CWT Claims Set can be protected.
	There are examples that are signed, MACed, encrypted, and that use nested signing and encryption.
	To make the examples easier to read, they are presented both as hex strings and
	in the extended CBOR diagnostic notation described in Section 6 of <xref target="RFC7049"/>.
      </t>

      <section anchor="exampleClaimsSet" title='Example CWT Claims Set'>
        <t>
          The CWT Claims Set used for the different examples
          displays usage of all the defined claims. For signed and MACed
          examples, the CWT Claims Set is the CBOR encoding as a binary string.
        </t>
        <t>
    <figure align="center" anchor="fig:exampleClaimsSetHex"
          title='Example CWT Claims Set as hex string'>
      <artwork align="left"><![CDATA[
a70175636f61703a2f2f61732e6578616d706c652e636f6d02656572696b7703
7818636f61703a2f2f6c696768742e6578616d706c652e636f6d041a5612aeb0
051a5610d9f0061a5610d9f007420b71
]]></artwork>
              </figure>
        </t>
        <t>
          <figure align="center" anchor="fig:exampleClaimsSetDiagnostic"
              title='Example CWT Claims Set in CBOR diagnostic notation'>
              <artwork align="left"><![CDATA[
{
  / iss / 1: "coap://as.example.com",
  / sub / 2: "erikw",
  / aud / 3: "coap://light.example.com",
  / exp / 4: 1444064944,
  / nbf / 5: 1443944944,
  / iat / 6: 1443944944,
  / cti / 7: h'0b71'
}
]]></artwork>
          </figure>
        </t>
      </section>

      <section anchor="exampleKeys" title='Example keys'>
        <t>
	  This section contains the keys used to sign, MAC, and encrypt the messages in this appendix.
	  Line breaks are for display purposes only.
	</t>

	<section anchor="exampleKeysSymmetric128" title='128-bit Symmetric Key as Hex Encoded String'>
	  <figure><artwork><![CDATA[
8e82e68e61654ecb5a369fe8be7572dd
]]></artwork></figure>
        </section>

	<section anchor="exampleKeysSymmetric256" title='256-bit Symmetric Key as Hex Encoded String'>
	  <figure><artwork><![CDATA[
403697de87af64611c1d32a05dab0fe1fcb715a86ab435f1ec99192d79569388
]]></artwork></figure>
        </section>

	<section anchor="exampleKeysECDSA256" title='ECDSA P-256 256-bit COSE Key'>
    <t>
    <figure align="center" anchor="fig:exampleKeysECDSA256"
          title='ECDSA 256-bit COSE Key as hex string'>
      <artwork align="left"><![CDATA[
a622582060f7f1a780d8a783bfb7a2dd6b2796e8128dbbcef9d3d168db952997
1a36e7b92358206c1382765aec5358f117733d281c1c7bdc39884d04a45a1e6c
67c858bc206c1903260102215820143329cce7868e416927599cf65a34f3ce2f
fda55a7eca69ed8919a394d42f0f2001
]]></artwork>
          </figure>
        </t>
        <t>
          <figure align="center" anchor="fig:exampleKeysECDSA256CBORDiagnostic"
                title='ECDSA 256-bit COSE Key in CBOR diagnostic notation'>
            <artwork align="left"><![CDATA[
{
  / d /   -4: h'6c1382765aec5358f117733d281c1c7bdc39884d04a45a1e
                6c67c858bc206c19',
  / y /   -3: h'60f7f1a780d8a783bfb7a2dd6b2796e8128dbbcef9d3d168
                db9529971a36e7b9',
  / x /   -2: h'143329cce7868e416927599cf65a34f3ce2ffda55a7eca69
                ed8919a394d42f0f',
  / crv / -1: 1 / P-256 / ,
  / kty /  1: 2 / EC2 / ,
  / alg /  3: -7 / ECDSA 256 /
}
]]></artwork>
          </figure>
        </t>
        </section>
      </section>

      <section anchor="exampleSigned" title='Example Signed CWT'>
        <t>
	  This section shows a signed CWT with a single recipient and a full CWT Claims Set.
	</t>
        <t>
	  The signature is generated using the private key listed in <xref target="exampleKeysECDSA256"/>
	  and it can be validated using the public key from <xref target="exampleKeysECDSA256"/>.
	  Line breaks are for display purposes only.
	</t>
        <t>
          <figure align="center" anchor="fig:exampleSignedHex"
                title='Signed CWT as hex string'>
            <artwork><![CDATA[
d28443a10126a05850a70175636f61703a2f2f61732e6578616d706c652e636f6
d02656572696b77037818636f61703a2f2f6c696768742e6578616d706c652e63
6f6d041a5612aeb0051a5610d9f0061a5610d9f007420b7158401fe410abce650
effed497f05d7f9462de67d571384097de0d96f1e2514d284cdd85634f269af6c
36c64f22e7691abb464bed2ff23176cdba9fd9e213f637d082
]]></artwork>
          </figure>
        </t>
        <t>
          <figure align="center" anchor="fig:exampleSignedCBORDiagnostic"
                title='Signed CWT in CBOR diagnostic notation'>
            <artwork><![CDATA[
18(
  [
    / protected / h'a10126' / {
      / alg / 1: -7 / ECDSA 256 /
    } / ,
    / unprotected / {},
    / payload / h'a70175636f61703a2f2f61732e6578616d706c652e63
                  6f6d02656572696b77037818636f61703a2f2f6c6967
                  68742e6578616d706c652e636f6d041a5612aeb0051a
                  5610d9f0061a5610d9f007420b71' / {
        / iss / 1: "coap://as.example.com",
        / sub / 2: "erikw",
        / aud / 3: "coap://light.example.com",
        / exp / 4: 1444064944,
        / nbf / 5: 1443944944,
        / iat / 6: 1443944944,
        / cti / 7: h'0b71'
      } / ,
    / signature / h'1fe410abce650effed497f05d7f9462de67d571384
                    097de0d96f1e2514d284cdd85634f269af6c36c64f
                    22e7691abb464bed2ff23176cdba9fd9e213f637d0
                    82'
  ]
)
]]></artwork>
          </figure>
        </t>
      </section>

      <section anchor="exampleMACed" title='Example MACed CWT'>
        <t>
	  This section shows a MACed CWT with a single recipient and a full CWT Claims Set.
	</t>
        <t>
	  The MAC is generated using the 256-bit symmetric key from <xref target="exampleKeysSymmetric256"/> with a 64-bit truncation.
	  Line breaks are for display purposes only.
	</t>
        <t>
          <figure align="center" anchor="fig:exampleMACedHex"
                title='MACed CWT with CWT tag as hex string'>
            <artwork><![CDATA[
d83dd18443a10104a05850a70175636f61703a2f2f61732e6578616d706c652e
636f6d02656572696b77037818636f61703a2f2f6c696768742e6578616d706c
652e636f6d041a5612aeb0051a5610d9f0061a5610d9f007420b7148093101ef
6d789200
]]></artwork>
          </figure>
        </t>
        <t>
          <figure align="center" anchor="fig:exampleMACedCBORDiagnostic"
                title='MACed CWT with CWT tag in CBOR diagnostic notation'>
            <artwork><![CDATA[
61(
  17(
    [
      / protected / h'a10104' / {
        / alg / 1: 4 / HMAC 256/64 /
      } / ,
      / unprotected / {},
      / payload / h'a70175636f61703a2f2f61732e6578616d706c652e636f
                    6d02656572696b77037818636f61703a2f2f6c69676874
                    2e6578616d706c652e636f6d041a5612aeb0051a5610d9
                    f0061a5610d9f007420b71' / {
          / iss / 1: "coap://as.example.com",
          / sub / 2: "erikw",
          / aud / 3: "coap://light.example.com",
          / exp / 4: 1444064944,
          / nbf / 5: 1443944944,
          / iat / 6: 1443944944,
          / cti / 7: h'0b71'
        } / ,
      / tag / h'093101ef6d789200'
    ]
  )
)
]]></artwork>
          </figure>
        </t>
      </section>
      <section anchor="exampleEncrypted" title='Example Encrypted CWT'>
        <t>
	  This section shows an encrypted CWT with a single recipient and a full CWT Claims Set.
	</t>
        <t>
	  The encryption is done with AES-CCM mode using the 128-bit symmetric key from <xref target="exampleKeysSymmetric128"/> with a 64-bit tag and 13-byte nonce, i.e., COSE AES-CCM-16-64-128.
	  Line breaks are for display purposes only.
	</t>
        <t>
          <figure align="center" anchor="fig:exampleEncryptedHex" title='Encrypted CWT as hex string'>
            <artwork><![CDATA[
d08343a1010aa1054d3a869e378e72b77d077c29be025858d275ad9cd7df1b10
ba8cde785c74b1e1e6ada287e2baf1451b06862529b784d230b0111773b6c369
1319aec4dcc379fe47115a5d62632727c05f4567fc84dd79554db86676a14978
42de805d8be93180af4d6ff3043886a0
]]></artwork>
          </figure>
        </t>
        <t>
          <figure align="center" anchor="fig:exampleEncryptedCBORDiagnostic"
                title='Encrypted CWT in CBOR diagnostic notation'>
            <artwork><![CDATA[
16(
  [
    / protected / h'a1010a' / {
      / alg / 1: 10 / AES-CCM-16-64-128 /
    } /,
    / unprotected / {
      / iv / 5: h'3a869e378e72b77d077c29be02'
    },
    / ciphertext / h'd275ad9cd7df1b10ba8cde785c74b1e1e6ada287e2b
                     af1451b06862529b784d230b0111773b6c3691319ae
                     c4dcc379fe47115a5d62632727c05f4567fc84dd795
                     54db86676a1497842de805d8be93180af4d6ff30438
                     86a0'
  ]
)
]]></artwork>
          </figure>
        </t>
      </section>
      <section anchor="exampleNested" title='Example Nested CWT'>

        <t>
	  This section shows a Nested CWT, signed and then encrypted, with a single recipient and a full CWT Claims Set.
	</t>
        <t>
	  The signature is generated using the private ECDSA key from <xref target="exampleKeysECDSA256"/>
	  and it can be validated using the public ECDSA parts from <xref target="exampleKeysECDSA256"/>.
	  The encryption is done with AES-CCM mode using the 128-bit symmetric key from <xref target="exampleKeysSymmetric128"/>
    with a 64-bit tag and 13-byte nonce, i.e., COSE AES-CCM-16-64-128.
    The content type is set to CWT to indicate that there are multiple
    layers of COSE protection before finding the CWT Claims Set. The decrypted
    ciphertext will be a COSE_sign1 structure.  In this example, it is the same
    one as in <xref target="exampleSigned"/>, i.e., a Signed CWT Claims Set.
    Note that there is no limitation to the number of layers; this is an
    example with two layers.
	  Line breaks are for display purposes only.
	</t>
        <t>
          <figure align="center" anchor="fig:exampleNestedHex"
                title='Signed and Encrypted CWT as hex string'>
            <artwork><![CDATA[
d08346a203183d010aa1054d9120e5dc42c9f9aec05ebe8a4858a538be026c02
4a40b19d6dbea3ddb18b31021f874a097a05ff3cdaa4665bafc8e46a3d7f37ad
f002fe57eee267f8f62a9c1621af75e1ecd742a3d801c2cc82358cf104a8d902
4d38a599ea6027d482dc2948a88fe83f9734804299c832401029e2d32a984789
c8e9563e8d2a751323bb7e4462b549e0fa89ef93f78bf6425635fba76b4aa804
7908e89b3b7c3d59d8a80e22f70a1b6ee8c162c564341c2f15cec252d3da038c
]]></artwork>
          </figure>
        </t>
        <t>
          <figure align="center" anchor="fig:exampleNestedCBORDiagnostic"
                title='Signed and Encrypted CWT in CBOR diagnostic notation'>
            <artwork><![CDATA[
16(
  [
    / protected / h'a203183d010a' / {
      / content type / 3: 61, / CWT /
      / alg / 1: 10 / AES-CCM-16-64-128 /
    } / ,
    / unprotected / {
      / iv / 5: h'9120e5dc42c9f9aec05ebe8a48'
    },
    / ciphertext / h'38be026c024a40b19d6dbea3ddb18b31021f874a097
                     a05ff3cdaa4665bafc8e46a3d7f37adf002fe57eee2
                     67f8f62a9c1621af75e1ecd742a3d801c2cc82358cf
                     104a8d9024d38a599ea6027d482dc2948a88fe83f97
                     34804299c832401029e2d32a984789c8e9563e8d2a7
                     51323bb7e4462b549e0fa89ef93f78bf6425635fba7
                     6b4aa8047908e89b3b7c3d59d8a80e22f70a1b6ee8c
                     162c564341c2f15cec252d3da038c'
  ]
)
]]></artwork>
          </figure>
        </t>
      </section>

    </section>

    <section anchor="Acknowledgements" title="Acknowledgements">
      <t>
	This specification is based on JSON Web Token (JWT) <xref target="RFC7519"/>,
	the authors of which also include Nat Sakimura and John Bradley.
	Ludwig Seitz and Göran Selander have made contributions the specification.
      </t>
      <!--
      <t>
	The following individuals contributed ideas,
	feedback, and wording that influenced this specification:
      </t>
      <t>
	TBD
      </t>
      -->
    </section>

    <section anchor="History" title="Document History">
      <t>[[ to be removed by the RFC Editor before publication as an RFC ]]</t>

      <t>
	-04
        <list style="symbols">
	  <t>
	    Specified that the use of CBOR tags to prefix any of the claim values defined in this specification is NOT RECOMMENDED.
	  </t>
	</list>
      </t>

      <t>
	-03
        <list style="symbols">
	  <t>
	    Reworked the examples to include signed, MACed, encrypted, and nested CWTs.
	  </t>
	  <t>
	    Defined the CWT CBOR tag and explained its usage.
	  </t>
	</list>
      </t>

      <t>
	-02
        <list style="symbols">
	  <t>
	    Added IANA registration for the application/cwt media type.
	  </t>
	  <t>
	    Clarified the nested CWT language.
	  </t>
	  <t>
	    Corrected nits identified by Ludwig Seitz.
	  </t>
	</list>
      </t>

      <t>
	-01
        <list style="symbols">
	  <t>
	    Added IANA registration for CWT Claims.
	  </t>
	  <t>
	    Added IANA registration for the application/cwt CoAP content-format type.
	  </t>
	  <t>
	    Added Samuel Erdtman as an editor.
	  </t>
	  <t>
	    Changed Erik's e-mail address.
	  </t>
	</list>
      </t>

      <t>
	-00
        <list style="symbols">
	  <t>
	    Created the initial working group version based on draft-wahlstroem-ace-cbor-web-token-00.
	  </t>
	</list>
      </t>

    </section>
  </back>
</rfc>
