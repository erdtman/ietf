<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE rfc SYSTEM "rfc2629.dtd">

<?xml-stylesheet type='text/xsl' href='http://xml2rfc.tools.ietf.org/authoring/rfc2629.xslt' ?>
<?rfc toc="yes"?>
<?rfc tocdepth="4"?>
<?rfc symrefs="yes"?>
<?rfc sortrefs="yes"?>
<?rfc strict="yes"?>
<?rfc compact="yes"?>
<?rfc subcompact="no"?>

<rfc category="std" ipr="trust200902" docName="draft-ietf-ace-cbor-web-token-03">

  <front>
    <title abbrev="CBOR Web Token">CBOR Web Token (CWT)</title>

    <author fullname="Michael B. Jones" initials="M.B." surname="Jones">
      <organization>Microsoft</organization>
      <address>
        <email>mbj@microsoft.com</email>
        <uri>http://self-issued.info/</uri>
      </address>
    </author>

    <author initials="E." surname="Wahlström" fullname="Erik Wahlström">
      <organization></organization>
      <address>
        <postal>
          <street></street>
          <city></city>
          <code></code>
          <country>Sweden</country>
        </postal>
        <phone></phone>
        <email>erik@wahlstromstekniska.se</email>
      </address>
    </author>

    <author fullname="Samuel Erdtman" initials="S.E." surname="Erdtman">
      <organization>Spotify AB</organization>
      <address>
      	<postal>
      	  <street>Birger Jarlsgatan 61, 4tr</street>
      	  <city>Stockholm</city>
      	  <region></region>
      	  <code>113 56</code>
      	  <country>Sweden</country>
      	</postal>
      	<phone>+46702691499</phone>
      	<email>erdtman@spotify.com</email>
      </address>
    </author>

    <author fullname="Hannes Tschofenig" initials="H." surname="Tschofenig">
      <organization>ARM Ltd.</organization>
      <address>
        <postal>
          <street></street>
          <code>6060</code> <city>Hall in Tirol</city>
          <country>Austria</country>
        </postal>
        <email>Hannes.Tschofenig@arm.com</email>
      </address>
    </author>

    <date day="2" month="February" year="2017" />

    <area>Security</area>
    <workgroup>ACE Working Group</workgroup>

    <keyword>Internet-Draft</keyword>
    <keyword>JSON Web Token</keyword>
    <keyword>JWT</keyword>
    <keyword>Claims</keyword>
    <keyword>CBOR</keyword>
    <keyword>COSE</keyword>
    <keyword>OAuth</keyword>
    <keyword>ACE</keyword>

    <abstract>
      <t>
        CBOR Web Token (CWT) is a compact means of representing claims to be
        transferred between two parties.  CWT is a profile of the JSON Web
        Token (JWT) that is optimized for constrained devices. The claims in a
        CWT are encoded in the Concise Binary Object Representation (CBOR) and
        CBOR Object Signing and Encryption (COSE) is used for added application
        layer security protection.  A claim is a piece of information asserted
        about a subject and is represented as a name/value pair consisting of a
        claim name and a claim value.
      </t>
    </abstract>

  </front>

  <middle>

    <!-- ====================================================================== -->

    <section anchor="Introduction" title="Introduction">

      <t>
        The JSON Web Token (JWT) <xref target="RFC7519"/> is a standardized security token format
        that has found use in OAuth 2.0 and OpenID Connect deployments, among other applications.
	JWT uses JSON Web Signatures (JWS) <xref target="RFC7515"/> and
	JSON Web Encryption (JWE) <xref target="RFC7516"/> to secure the contents of the JWT,
	which is a set of claims represented in JSON <xref target="RFC7519"/>.
	The use of JSON for encoding information is popular for
        Web and native applications, but it is considered inefficient for some
        Internet of Things (IoT) systems that use low power radio technologies.
      </t>

      <t>
        In this document an alternative encoding of claims is defined. Instead
        of using JSON, as provided by JWTs, this specification uses
        CBOR <xref target="RFC7049"/> and calls this new structure "CBOR Web Token (CWT)", which is a
        compact means of representing secured claims to be transferred between two
        parties. CWT is closely related to JWT. It references the JWT claims
        and both its name and pronunciation are derived from JWT. To protect the
        claims contained in CWTs, the CBOR Object Signing and Encryption (COSE)
	<xref target="I-D.ietf-cose-msg"/>
        specification is used.
      </t>

      <t>
        The suggested pronunciation of CWT is the same as the English word
        "cot".
      </t>

    </section>

    <!-- /////////////////////////////////////////////////////////////////////// -->

    <section anchor="Terminology" title="Terminology">
      <t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
       "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED", "MAY", and "OPTIONAL" in this
       document are to be interpreted as described in "Key words for use in
       RFCs to Indicate Requirement Levels" <xref target="RFC2119"/>.</t>

       <t>
         This document reuses terminology from JWT
         <xref target="RFC7519"/> and COSE <xref target="I-D.ietf-cose-msg" />.
       </t>

      <t>
        <list style="hanging">
          <t hangText="Type3StringOrURI:">
	    <vspace/>
            The "Type3StringOrURI" term has the same meaning, syntax, and
            processing rules as the "StringOrUri" term defined in Section 2
            of JWT <xref target="RFC7519" />, except that Type3StringOrURI uses
            CBOR major type 3 instead of a JSON string value.
           </t>

          <t hangText="Type6NumericDate:">
	    <vspace/>
            The "Type6NumericDate" term has the same meaning, syntax, and
            processing rules as the "NumericDate" term defined in Section 2
            of JWT <xref target="RFC7519" />, except that Type6NumericDate uses
            CBOR major type 6, with tag value 1, instead of a numeric JSON
            value.
          </t>

          <t hangText="CBOR encoded claim key:">
	    <vspace/>
            The key used to identify a claim value.
          </t>

          <t hangText="CWT Claims Set">
	    <vspace/>
	    A CBOR map that contains the claims conveyed by the CWT.
	  </t>

        </list>
      </t>

    </section>

    <section anchor="Claims" title="Claims">
      <t>
        The set of claims that a CWT must contain to be considered valid is
        context dependent and is outside the scope of this specification.
        Specific applications of CWTs will require implementations to
        understand and process some claims in particular ways.  However, in
        the absence of such requirements, all claims that are not understood
        by implementations MUST be ignored.
      </t>

      <t>
        To keep CWTs as small as possible, the CBOR encoded claim keys are
        represented using CBOR major type 0.
        <xref target="CWTCNMajorTypesSummary" /> summarizes all keys
	used to identify the claims defined in this document.
      </t>

      <section anchor="CWTClaimNames" title="Claim Names">

         <t>
           None of the claims defined below are intended to be
           mandatory to use or implement. They rather provide
           a starting point for a set of useful, interoperable claims.
           Applications using CWTs should define which specific claims they
           use and when they are required or optional.
         </t>

         <section anchor="CWTCNiss" title="iss (Issuer) Claim">
            <t>
              The <spanx style="verb">iss</spanx> (issuer) claim has the same meaning, syntax, and
              processing rules as the <spanx style="verb">iss</spanx> claim defined in Section 4.1.1
              of JWT <xref target="RFC7519" />, except that the format MUST be a
              Type3StringOrURI. The CBOR encoded claim key 1 MUST be used to
              identify this claim.
            </t>
         </section>

         <section anchor="CWTCNsub" title="sub (Subject) Claim">
            <t>
              The <spanx style="verb">sub</spanx> (subject) claim has the same meaning, syntax, and
              processing rules as the <spanx style="verb">sub</spanx> claim defined in Section 4.1.2
              of JWT <xref target="RFC7519" />, except that the format MUST be a
              Type3StringOrURI. The CBOR encoded claim key 2 MUST be used to
              identify this claim.
            </t>
          </section>

          <section anchor="CWTCNaud" title="aud (Audience) Claim">
            <t>
              The <spanx style="verb">aud</spanx> (audience) claim has the same meaning, syntax, and
              processing rules as the <spanx style="verb">aud</spanx> claim defined in Section 4.1.3
              of JWT <xref target="RFC7519" />, except that the format MUST be a
              Type3StringOrURI. The CBOR encoded claim key 3 MUST be used to
              identify this claim.
            </t>
          </section>

          <section anchor="CWTCNexp" title="exp (Expiration Time) Claim">
            <t>
              The <spanx style="verb">exp</spanx> (expiration time) claim has the same meaning, syntax,
              and processing rules as the <spanx style="verb">exp</spanx> claim defined in Section
              4.1.4 of JWT <xref target="RFC7519" />, except that the format
              MUST be a Type6NumericDate. The CBOR encoded claim key 4 MUST be
              used to identify this claim.
            </t>
          </section>

          <section anchor="CWTCNnbf" title="nbf (Not Before) Claim">
            <t>
              The <spanx style="verb">nbf</spanx> (not before) claim has the same meaning, syntax,
              and processing rules as the <spanx style="verb">nbf</spanx> claim defined in Section
              4.1.5 of JWT <xref target="RFC7519" />, except that the format
              MUST be a Type6NumericDate. The CBOR encoded claim key 5 MUST be
              used to identify this claim.
            </t>
          </section>

          <section anchor="CWTCNiat" title="iat (Issued At) Claim">
            <t>
              The <spanx style="verb">iat</spanx> (issued at) claim has the same meaning, syntax,
              and processing rules as the <spanx style="verb">iat</spanx> claim defined in Section
              4.1.6 of JWT <xref target="RFC7519" />, except that the format
              MUST be a Type6NumericDate. The CBOR encoded claim key 6 MUST be
              used to identify this claim.
            </t>
          </section>

          <section anchor="CWTCNcti" title="cti (CWT ID) Claim">
            <t>
              The <spanx style="verb">cti</spanx> (CWT ID) claim has the same meaning, syntax,
              and processing rules as the <spanx style="verb">jti</spanx> claim defined in Section
              4.1.7 of JWT <xref target="RFC7519" />, except that the format
              MUST be of major type 2, binary string. The
              CBOR encoded claim key 7 MUST be used to identify this claim.
            </t>
          </section>

	  <!--
	    Let's literally just reference all the claims defined in JWT and define other claims in other specs.
          <section anchor="CWTCNcks" title="cks (COSE Key Structure) Claim">
            <t>
              The <spanx style="verb">cks</spanx> (COSE Key Structure) claim holds members representing a
              COSE Key Structure.  The members of the structure can be found in
              Section 7.1 of <xref target="I-D.ietf-cose-msg" />. The <spanx style="verb">cks</spanx>
              value is a case-sensitive string and MUST be of CBOR major type 2,
              byte string. The CBOR encoded claim key 8 MUST be used to identify
              this claim.
	      <!== TBD: Check this section number periodically ==>
            </t>
          </section>
	  -->

      </section>

    </section>


    <section anchor="CWTCNMajorTypesSummary"
       title="Summary of the values, CBOR major types and encoded claim keys">

      <t>
        <figure align="center" anchor="fig:cborMappingValuesAccessTokens"
                title="Summary of the values, CBOR major types and encoded claim keys.">
          <artwork><![CDATA[
/---------+------------------------+--------------------------\
| Claim   | CBOR encoded claim key | CBOR major type of value |
|---------+------------------------+--------------------------|
| iss     | 1                      | 3                        |
| sub     | 2                      | 3                        |
| aud     | 3                      | 3                        |
| exp     | 4                      | 6 tag value 1            |
| nbf     | 5                      | 6 tag value 1            |
| iat     | 6                      | 6 tag value 1            |
| cti     | 7                      | 2                        |
\---------+------------------------+--------------------------/
]]></artwork>
<!--
| cks     | 8                      | 3                        |
-->
        </figure>
      </t>

    </section>
    <section anchor="CreatingValidatingCWTs" title="Creating and Validating CWTs">

      <section anchor="CreatingCWT" title="Creating a CWT">
        <t>
          To create a CWT, the following steps are performed.  The order of the steps is not significant in cases where there are no dependencies between the inputs and outputs of the steps.
        </t>
        <t>
        <list style="numbers">
          <t>
            Create a CWT Claims Set containing the desired claims.
          </t>
          <t>
            Let the Message be the binary representation of the CWT Claims Set.
          </t>
          <t>
            Create a COSE Header containing the desired set of Header Parameters.  The COSE Header MUST be valid according to the <xref target="I-D.ietf-cose-msg"/> specification.
          </t>
          <t>
            Depending upon whether the CWT is signed, MACed or encrypted, there are three cases:
            <list style="symbols">
              <t>
                If the CWT is signed, create a COSE_Sign/COSE_Sign1 object using the Message as the COSE_Sign/COSE_Sign1 Payload; all steps specified in <xref target="I-D.ietf-cose-msg" /> for creating a COSE_Sign/COSE_Sign1 object MUST be followed.
              </t>
              <t>
                Else, if the CWT is MACed, create a COSE_Mac/COSE_Mac0 object using the Message as the COSE_Mac/COSE_Mac0 Payload; all steps specified in <xref target="I-D.ietf-cose-msg" /> for creating a COSE_Mac/COSE_Mac0 object MUST be followed.
              </t>
              <t>
                Else, if the CWT is a COSE_Encrypt/COSE_Encrypt0 object, create a COSE_Encrypt/COSE_Encrypt0 using the Message as the plaintext for the COSE_Encrypt/COSE_Encrypt0 object; all steps specified in <xref target="I-D.ietf-cose-msg" /> for creating a COSE_Encrypt/COSE_Encrypt0 object MUST be followed.
              </t>
            </list>
          </t>
          <t>
              If a nested signing, MACing or encryption operation will be performed, let the Message be the COSE_Sign/COSE_Sign1, COSE_Mac/COSE_Mac0 or COSE_Encrypt/COSE_Encrypt0, and return to Step 3, using a "content type" header value corresponding to the media type "application/cwt" in the new COSE Header created in that step.
            <vspace/>
              Note: If integrity (signing/MACing) and confidentiality (encryption) protection are needed, it is recommended to use an authenticated encryption algorithm to save space and processing.
          </t>
        </list>
      </t>
      </section>
      <section anchor="ValidatingCWT" title="Validating a CWT">
        <t>
          When validating a CWT, the following steps are performed.  The order of the steps is not significant in cases where there are no dependencies between the inputs and outputs of the steps.  If any of the listed steps fail, then the CWT MUST be rejected -- that is, treated by the application as an invalid input.
        </t>
        <t>
          <list style="numbers">
            <t>
              Verify that the CWT is a valid CBOR object.
            </t>
            <t>
              Verify that the resulting COSE Header includes only parameters and values whose syntax and semantics are both understood and supported or that are specified as being ignored when not understood.
            </t>
            <t>
              Use the CBOR tag to determine the type of the CWT, COSE_Sign/COSE_Sign1, COSE_Mac/COSE_Mac0, or COSE_Encrypt/COSE_Encrypt0.
            </t>
            <t>
              Depending upon whether the CWT is a COSE_Sign/COSE_Sign1, COSE_Mac/COSE_Mac0 or COSE_Encrypt/COSE_Encrypt0, there are three cases:
              <list style="symbols">
                <t>
                  If the CWT is a COSE_Sign/COSE_Sign1, follow the steps specified in <xref target="I-D.ietf-cose-msg" /> Section 4 (Signing Objects) for validating a COSE_Sign/COSE_Sign1 object.  Let the Message be the COSE_Sign/COSE_Sign1 payload.
                </t>
                <t>
                  Else, if the CWT is a COSE_Mac/COSE_Mac0, follow the steps specified in <xref target="I-D.ietf-cose-msg" /> Section 6 (MAC Objects) for validating a COSE_Mac/COSE_Mac0 object.  Let the Message be the COSE_Mac/COSE_Mac0 payload.
                </t>
                <t>
                  Else, if the CWT is a COSE_Encrypt/COSE_Encrypt0 object, follow the steps specified in <xref target="I-D.ietf-cose-msg" /> Section 5 (Encryption Objects) for validating a COSE_Encrypt/COSE_Encrypt0 object.  Let the Message be the resulting plaintext.
                </t>
              </list>
            </t>
            <t>
              If the COSE Header contains a "content type" header value corresponding to the media type "application/cwt", then the Message is a CWT that was the subject of nested signing or encryption operations.  In this case, return to Step 1, using the Message as the CWT.
            </t>
            <t>
              Verify that the Message is a valid CBOR object; let the CWT Claims Set be this CBOR object.
            </t>
          </list>
        </t>
      </section>
    </section>

<!--
	  <section anchor="DataTypeMapping" title="Data Type Mapping">

      <t>The data types listed along with the claim definitions in <xref target="claims"/> need to be mapped to data types available with CBOR. This document has not yet attempted to provide such mapping.</t>

    </section>
  -->


    <section anchor="Security" title="Security Considerations">

      <t>The security of the CWT is dependent on the protection offered by COSE. Without protecting the claims contained in a CWT an adversary is able to modify, add or remove claims. Since the claims conveyed in a CWT are used to make authorization decisions it is not only important to protect the CWT in transit but also to ensure that the recipient is able to authenticate the party that collected the claims and created the CWT. Without trust of the recipient in the party that created the CWT no sensible authorization decision can be made. Furthermore, the creator of the CWT needs to carefully evaluate each claim value prior to including it in the CWT so that the recipient can be assured about the correctness of the provided information.</t>

    </section>

    <!-- /////////////////////////////////////////////////////////////////////// -->

    <section anchor="IANA" title="IANA Considerations">

      <section anchor="IANACWTClaimsRegistry" title="CBOR Web Token (CWT) Claims Registry">
	<t>
	  This section establishes the
	  IANA "CBOR Web Token (CWT) Claims" registry.
	</t>
	<t>
	  Values are registered on a Specification Required
	  <xref target="RFC5226"/> basis, on the advice of one or more Designated Experts.
	  However, to allow for the
	  allocation of values prior to publication, the Designated Experts may approve
	  registration once they are satisfied that such a specification will be published.
	</t>
	<t>
	  Criteria that should be applied by the Designated Experts includes
	  determining whether the proposed registration duplicates existing functionality,
	  whether it is likely to be of general applicability
	  or whether it is useful only for a single application,
	  and whether the registration description is clear.
	</t>

	<section anchor="IANACWTClaimsKeyRegistryTemplate" title="Registration Template">
	  <t>
	    <list style='hanging'>
	      <t hangText='Claim Name:'>
                <vspace/>
                The human-readable name requested (e.g., "iss").
              </t>
              <t hangText='Claim Description:'>
                <vspace/>
                Brief description of the claim (e.g., "Issuer").
              </t>
	      <t hangText='JWT Claim Name:'>
		<vspace/>
		Claim Name of the equivalent JWT claim as registered in <xref target="IANA.JWT.Claims"/>.
		CWT claims should normally have a corresponding JWT claim.
		If a corresponding JWT claim would not make sense,
		the Designated Experts can choose to accept registrations
		for which the JWT Claim Name is listed as "N/A".
	      </t>
	      <t hangText='CBOR Key Value:'>
		<vspace/>
		Key value for the claim.  The key value MUST be an integer in the range of 1 to 65536.
	      </t>
	      <t hangText='CBOR Major Type:'>
		<vspace/>
		CBOR major type and optional tag for the claim.
	      </t>
	      <t hangText='Change Controller:'>
		<vspace/>
		For Standards Track RFCs, list the "IESG". For others, give the name of the responsible party. Other details (e.g., postal address, email address, home page URI) may also be included.
	      </t>
	      <t hangText='Specification Document(s):'>
		<vspace/>
		Reference to the document or documents that specify the parameter, preferably including URIs that can be used to retrieve copies of the documents. An indication of the relevant sections may also be included but is not required.
	      </t>
	    </list>
	  </t>
	</section>

	<section anchor="IANACWTClaimsKeyRegistryInitial" title="Initial Registry Contents">
	  <t>
	    <?rfc subcompact="yes"?>
	    <list style='symbols'>
	      <t>Claim Name: <spanx style="verb">iss</spanx></t>
	      <t>Claim Description: Issuer</t>
	      <t>JWT Claim Name: <spanx style="verb">iss</spanx></t>
	      <t>CBOR Key Value: 1</t>
	      <t>CBOR Major Type: 3</t>
	      <t>Change Controller: IESG</t>
	      <t>Specification Document(s): <xref target="CWTCNiss"/> of [[ this specification ]]</t>
	    </list>
	  </t>
	  <t>
	    <list style='symbols'>
	      <t>Claim Name: <spanx style="verb">sub</spanx></t>
	      <t>Claim Description: Subject</t>
	      <t>JWT Claim Name: <spanx style="verb">sub</spanx></t>
	      <t>CBOR Key Value: 2</t>
	      <t>CBOR Major Type: 3</t>
	      <t>Change Controller: IESG</t>
	      <t>Specification Document(s): <xref target="CWTCNsub"/> of [[ this specification ]]</t>
	    </list>
	  </t>
	  <t>
	    <list style='symbols'>
	      <t>Claim Name: <spanx style="verb">aud</spanx></t>
	      <t>Claim Description: Audience</t>
	      <t>JWT Claim Name: <spanx style="verb">aud</spanx></t>
	      <t>CBOR Key Value: 3</t>
	      <t>CBOR Major Type: 3</t>
	      <t>Change Controller: IESG</t>
	      <t>Specification Document(s): <xref target="CWTCNaud"/> of [[ this specification ]]</t>
	    </list>
	  </t>
	  <t>
	    <list style='symbols'>
	      <t>Claim Name: <spanx style="verb">exp</spanx></t>
	      <t>Claim Description: Expiration Time</t>
	      <t>JWT Claim Name: <spanx style="verb">exp</spanx></t>
	      <t>CBOR Key Value: 4</t>
	      <t>CBOR Major Type: 6, tag value 1</t>
	      <t>Change Controller: IESG</t>
	      <t>Specification Document(s): <xref target="CWTCNexp"/> of [[ this specification ]]</t>
	    </list>
	  </t>
	  <t>
	    <list style='symbols'>
	      <t>Claim Name: <spanx style="verb">nbf</spanx></t>
	      <t>Claim Description: Not Before</t>
	      <t>JWT Claim Name: <spanx style="verb">nbf</spanx></t>
	      <t>CBOR Key Value: 5</t>
	      <t>CBOR Major Type: 6, tag value 1</t>
	      <t>Change Controller: IESG</t>
	      <t>Specification Document(s): <xref target="CWTCNnbf"/> of [[ this specification ]]</t>
	    </list>
	  </t>
	  <t>
	    <list style='symbols'>
	      <t>Claim Name: <spanx style="verb">iat</spanx></t>
	      <t>Claim Description: Issued At</t>
	      <t>JWT Claim Name: <spanx style="verb">iat</spanx></t>
	      <t>CBOR Key Value: 6</t>
	      <t>CBOR Major Type: 6, tag value 1</t>
	      <t>Change Controller: IESG</t>
	      <t>Specification Document(s): <xref target="CWTCNiat"/> of [[ this specification ]]</t>
	    </list>
	  </t>
	  <t>
	    <list style='symbols'>
	      <t>Claim Name: <spanx style="verb">cti</spanx></t>
	      <t>Claim Description: CWT ID</t>
	      <t>JWT Claim Name: <spanx style="verb">jti</spanx></t>
	      <t>CBOR Key Value: 7</t>
	      <t>CBOR Major Type: 2</t>
	      <t>Change Controller: IESG</t>
	      <t>Specification Document(s): <xref target="CWTCNcti"/> of [[ this specification ]]</t>
	    </list>
	  </t>

	</section>
	<?rfc subcompact="no"?>

      </section>


      <section title="Media Type Registration" anchor="MediaReg">
	<t>
	  This section registers the <spanx
	  style="verb">application/cwt</spanx> media type <xref target="RFC2046"/>
	  in the "Media Types" registry <xref target="IANA.MediaTypes"/>
	  in the manner described in <xref target="RFC6838">RFC 6838</xref>,
	  which can be used to indicate that the content is a CWT.
	</t>
	<section title="Registry Contents" anchor="MediaContents">
	  <t> <?rfc subcompact="yes"?>
	    <list style="symbols">
	      <t>
		Type name: application
	      </t>
	      <t>
		Subtype name: cwt
	      </t>
	      <t>
		Required parameters: N/A
	      </t>
	      <t>
		Optional parameters: N/A
	      </t>
	      <t>
		Encoding considerations: binary
	      </t>
	      <t>
		Security considerations: See the Security Considerations section of [[ this specification ]]
	      </t>
	      <t>
		Interoperability considerations: N/A
	      </t>
	      <t>
		Published specification: [[ this specification ]]
	      </t>
	      <t>
		Applications that use this media type:
		IoT applications sending security tokens over HTTP(S) and other transports.
	      </t>
	      <t>
		Fragment identifier considerations: N/A
	      </t>
	      <t>
		Additional information:<list style="empty">
	        <t>Magic number(s): N/A</t>
		<t>File extension(s): N/A</t>
		<t>Macintosh file type code(s): N/A </t></list>
<vspace/>
	      </t>
	      <t>
		Person &amp; email address to contact for further information:
<vspace/>
		IESG, iesg@ietf.org
	      </t>
	      <t>
		Intended usage: COMMON
	      </t>
	      <t>
		Restrictions on usage: none
	      </t>
	      <t>
		Author: Michael B.&nbsp;Jones, mbj@microsoft.com
	      </t>
	      <t>
		Change controller: IESG
	      </t>
	      <t>
		Provisional registration? No
	      </t>
	    </list>
	  </t>
	</section>
	<?rfc subcompact="no"?>
      </section>

      <section anchor="IANACoAPContentFormatRegistration" title="CoAP Content-Formats Registration">
        <t>
          This section registers the CoAP Content-Format ID for the "application/cwt" media type
	  in the "CoAP Content-Formats" registry <xref target="IANA.CoAP.Content-Formats"/>
	  established by <xref target="RFC7252"/>.
        </t>

	<section anchor="CoAPreg" title="Registry Contents">
	  <t>
	    <?rfc subcompact="yes"?>
	    <list style='symbols'>
	      <t>Media Type: application/cwt</t>
	      <t>Encoding: - </t>
	      <t>Id: TBD (maybe 61) </t>
	      <t>Reference: [[ this specification ]]</t>
	    </list>
	  </t>
	</section>
	<?rfc subcompact="no"?>
      </section>

    </section>

    <!-- /////////////////////////////////////////////////////////////////////// -->

  </middle>

  <back>
    <references title='Normative References'>
      <?rfc include='http://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.2119.xml' ?>
      <?rfc include='http://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.2046.xml' ?>
      <?rfc include='http://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.5226.xml' ?>
      <?rfc include='http://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.6838.xml' ?>
      <?rfc include='http://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7049.xml' ?>
      <?rfc include='http://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7159.xml' ?>
      <?rfc include='http://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7252.xml' ?>
      <?rfc include='http://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7515.xml' ?>
      <?rfc include='http://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7516.xml' ?>
      <?rfc include='http://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7519.xml' ?>

      <?rfc include="http://xml2rfc.tools.ietf.org/public/rfc/bibxml3/reference.I-D.draft-ietf-cose-msg-24"?>

      <reference anchor="IANA.JWT.Claims" target="http://www.iana.org/assignments/jwt">
        <front>
          <title>JSON Web Token Claims</title>
          <author>
            <organization>IANA</organization>
          </author>
	  <date/>
        </front>
      </reference>

      <reference anchor="IANA.MediaTypes" target="http://www.iana.org/assignments/media-types">
        <front>
          <title>Media Types</title>
          <author>
            <organization>IANA</organization>
          </author>
	  <date/>
        </front>
      </reference>

      <reference anchor="IANA.CoAP.Content-Formats" target="http://www.iana.org/assignments/core-parameters/core-parameters.xhtml#content-formats">
        <front>
          <title>CoAP Content-Formats</title>
          <author>
            <organization>IANA</organization>
          </author>
	  <date/>
        </front>
      </reference>

    </references>

    <references title='Informative References'>
      <?rfc include="http://xml2rfc.tools.ietf.org/public/rfc/bibxml3/reference.I-D.draft-greevenbosch-appsawg-cbor-cddl-09"?>
    </references>

    <section anchor="examples" title="Examples">
      <t>This appendix includes a set of CWT examples that show how the CWT claims set can be protected, signed MACed encrypted and nested signature and encryption</t>
      <t>To make the examples easier to read, they are presented both as hex string and the extended CBOR diagnostic notation (defined in
   <xref target="I-D.greevenbosch-appsawg-cbor-cddl" pageno="false" format="default"/>).</t>
      <section anchor="exampleClaimSet" title='Example Claim Set'>
        <t>
          The claim set used for the different examples is a full claim set to
          display usage of all the different claims. For signed and MACed
          examples the claim set is the CBOR encoding as a binary string.
        </t>
        <t>
          <figure align="center" anchor="fig:exampleClaimSet"
              title='Full example claim set'>
              <artwork align="left"><![CDATA[
{
  / iss / 1: "coap://as.example.com",
  / sub / 2: "erikw",
  / aud / 3: "coap://light.example.com",
  / exp / 4: 1444064944,
  / nbf / 5: 1443944944,
  / iat / 6: 1443944944,
  / cti / 7: h'0b71'
}
            ]]></artwork>
          </figure>
        </t>
      </section>

      <section anchor="exampleKeys" title='Example keys'>
        <t>
	  This section contains the keys used to sign, MAC, and encrypt the messages in this appendix.
	  Line breaks are for display purposes only.
	</t>

	<section anchor="exampleKeysSymmetric128" title='128-bit Symmetric Key as Hex Encoded String'>
	  <figure><artwork><![CDATA[
9e4f3e65cc1a558b39ce97b3db469b04
]]></artwork></figure>
        </section>

	<section anchor="exampleKeysSymmetric256" title='256-bit Symmetric Key as Hex Encoded String'>
	  <figure><artwork><![CDATA[
e60198ac1650ec9210d7f4f5b27aeae2ada8f4adada555909edca75ce2ae506e
]]></artwork></figure>
        </section>

	<section anchor="exampleKeysECDSA256" title='ECDSA P-256 256-bit COSE Key'>
    <t>
    <figure align="center" anchor="fig:exampleKeysECDSA256"
          title='ECDSA 256-bit COSE Key as hex string'>
      <artwork align="left"><![CDATA[
a6225820feb11ca73b028a10cf77d58a2dfdf2a11eab8ffeeeaaeeb03097ffee
9f3ef2fc2358200657fada2568959c49a404583fe237290ebeb1956f3ad3d966
ea09e33369d7b103260102215820c4f9160fc22682991c59c4d96e8accc2da3c
c7b7a9bc197c7c1e1bc6d0c1dc612001
            ]]></artwork>
          </figure>
        </t>
        <t>
          <figure align="center" anchor="fig:exampleKeysECDSA256CBORDiagnostic"
                title='ECDSA 256-bit COSE Key in CBOR diagnostic notation'>
            <artwork align="left"><![CDATA[
{
  / d / -4: h'0657fada2568959c49a404583fe237290ebeb1956f3ad3d966
              ea09e33369d7b1',
  / y / -3: h'feb11ca73b028a10cf77d58a2dfdf2a11eab8ffeeeaaeeb030
              97ffee9f3ef2fc',
  / x / -2: h'c4f9160fc22682991c59c4d96e8accc2da3cc7b7a9bc197c7c
              1e1bc6d0c1dc61',
  / crv / -1: 1 / P-256 /
  / kty /  1: 2 / EC2 /,
  / alg /  3: -7, \ ECDSA 256 \
}
            ]]></artwork>
          </figure>
        </t>
        </section>
      </section>

      <section anchor="exampleSigned" title='Example Signed CWT'>
        <t>
	  This section shows a signed CWT with a single recipient and a full CWT Claims Set.
	</t>
        <t>
	  The signature is generated using the private ECDSA key from <xref target="exampleKeysECDSA256"/>
	  and it can be validated using the public part of the ECDSA key from <xref target="exampleKeysECDSA256"/>.
	  Line breaks are for display purposes only.
	</t>
        <t>
          <figure align="center" anchor="fig:exampleSignedHex"
                title='Signed CWT as hex string'>
            <artwork><![CDATA[
d28446a203183d0126a05850a702656572696b77037818636f61703a2f2f6c69
6768742e6578616d706c652e636f6d041a5612aeb0051a5610d9f0061a5610d9
f00175636f61703a2f2f61732e6578616d706c652e636f6d07420b7158407eef
29abe962ac185e5a372d95d69ce1b5683c5c25efb69a81710dc5173254f5179a
639827694c22828819704eb026676ca78aaf8da76672a6b5537fb90e710d
            ]]></artwork>
          </figure>
        </t>
        <t>
          <figure align="center" anchor="fig:exampleSignedCBORDiagnostic"
                title='Signed CWT in CBOR diagnostic notation'>
            <artwork><![CDATA[
18(
  [
    / protected / h'a203183d0126',
    / unprotected / {},
    / payload / h'a702656572696b77037818636f61703a2f2f6c69676874
                  2e6578616d706c652e636f6d041a5612aeb0051a5610d9
                  f0061a5610d9f00175636f61703a2f2f61732e6578616d
                  706c652e636f6d07420b71',
    / signature / h'7eef29abe962ac185e5a372d95d69ce1b5683c5c25ef
                    b69a81710dc5173254f5179a639827694c2282881970
                    4eb026676ca78aaf8da76672a6b5537fb90e710d'
  ]
)
            ]]></artwork>
          </figure>
          <figure align="center" anchor="fig:exampleSignedProtectedCBORDiagnostic"
                title='Protected headers in diagnostic notation'>
            <artwork align="left"><![CDATA[
{
  / content type / 3: 61, / CWT /
  / alg / 1: -7 / ECDSA 256 /
}
            ]]></artwork>
          </figure>
        </t>
      </section>

      <section anchor="exampleMACed" title='Example MACed CWT'>
        <t>
	  This section shows a MACed CWT with a single recipient and a full CWT Claims Set.
	</t>
        <t>
	  The MAC is generated using the 256-bit symmetric key from <xref target="exampleKeysSymmetric256"/> with a 64-bit truncation.
	  Line breaks are for display purposes only.
	</t>
        <t>
          <figure align="center" anchor="fig:exampleMACedHex"
                title='MACed CWT as hex string'>
            <artwork><![CDATA[
d18446a203183d0104a05850a702656572696b77037818636f61703a2f2f6c69
6768742e6578616d706c652e636f6d041a5612aeb0051a5610d9f0061a5610d9
f00175636f61703a2f2f61732e6578616d706c652e636f6d07420b7148b59884
6f1ce93f9d
            ]]></artwork>
          </figure>
        </t>
        <t>
          <figure align="center" anchor="fig:exampleMACedCBORDiagnostic"
                title='MACed CWT in CBOR diagnostic notation'>
            <artwork><![CDATA[
17(
  [
    / protected / h'a203183d0104',
    / unprotected / {},
    / payload / h'a702656572696b77037818636f61703a2f2f6c69676874
                  2e6578616d706c652e636f6d041a5612aeb0051a5610d9
                  f0061a5610d9f00175636f61703a2f2f61732e6578616d
                  706c652e636f6d07420b71',
    / tag / h'b598846f1ce93f9d'
  ]
)
            ]]></artwork>
          </figure>
          <figure align="center" anchor="fig:exampleMACedProtectedCBORDiagnostic"
                title='Protected headers in diagnostic notation'>
            <artwork align="left"><![CDATA[
{
  / content type / 3: 61, / CWT /
  / alg / 1: 4 / HMAC 256/64 /
}
            ]]></artwork>
          </figure>
        </t>
      </section>
      <section anchor="exampleEncrypted" title='Example Encrypted CWT'>
        <t>
	  This section shows an encrypted CWT with a single recipient and a full CWT Claims Set.
	</t>
        <t>
	  The encryption is done with AES-CCM mode using the 128-bit symmetric key from <xref target="exampleKeysSymmetric128"/> with a 64-bit tag and 13-byte nonce, i.e., COSE AES-CCM-16-64-128.
	  Line breaks are for display purposes only.
	</t>
        <t>
          <figure align="center" anchor="fig:exampleEncryptedHex" title='Encrypted CWT as hex string'>
            <artwork><![CDATA[
d08346a203183d010aa1054dadbe290e8c9c23067a558b15795858f7a8ec3e32
3bb6e006e8aec087666f6fc0d65d7aa272f5f1dde1dfb52fd3a5e1ace97e5bfc
8f05a146fd8a9feab7bb9e722254e2660612f956041264c06ea3b95afb0d8ce3
138bc80baf2511565d3dad63ea7534699fa449
            ]]></artwork>
          </figure>
        </t>
        <t>
          <figure align="center" anchor="fig:exampleEncryptedCBORDiagnostic"
                title='Encrypted CWT in CBOR diagnostic notation'>
            <artwork><![CDATA[
16(
  [
    / protected / h'a203183d010a',
    / unprotected / {
      / iv / 5: h'adbe290e8c9c23067a558b1579'
    },
    / ciphertext / h'f7a8ec3e323bb6e006e8aec087666f6fc0d65d7aa27
                     2f5f1dde1dfb52fd3a5e1ace97e5bfc8f05a146fd8a
                     9feab7bb9e722254e2660612f956041264c06ea3b95
                     afb0d8ce3138bc80baf2511565d3dad63ea7534699f
                     a449'
  ]
)
            ]]></artwork>
          </figure>
          <figure align="center" anchor="fig:exampleProtectedCBORDiagnostic"
                title='Protected headers in diagnostic notation'>
            <artwork align="left"><![CDATA[
{
  / content type / 3: 61, / CWT /
  / alg / 1: 10 / AES-CCM-16-64-128 /
}
            ]]></artwork>
          </figure>
        </t>
      </section>
      <section anchor="exampleNested" title='Example Nested CWT'>

        <t>
	  This section shows a Nested CWT, signed and then encrypted, with a single recipient and a full CWT Claims Set.
	</t>
        <t>
	  The signature is generated using the private ECDSA key from <xref target="exampleKeysECDSA256"/>
	  and it can be validated using the public ECDSA parts from <xref target="exampleKeysECDSA256"/>.
	  The encryption is done with AES-CCM mode using the 128-bit symmetric key from <xref target="exampleKeysSymmetric128"/>
    with a 64-bit tag and 13-byte nonce, i.e., COSE AES-CCM-16-64-128.
    The content type is set to COSE_sign1 to indicate that there is multiple
    layers of COSE protection before finding the CWT claim set. The decrypted
    ciphertext will be a COSE_sign1 structure, in this example it is the same
    one as in <xref target="exampleSigned"/>, i.e. a Signed CWT claim set.
    Note that there is no limitation to the number of layers this is just an
    example with two layers.
	  Line breaks are for display purposes only.
	</t>
        <t>
          <figure align="center" anchor="fig:exampleNestedHex"
                title='Signed and Encrypted CWT as hex string'>
            <artwork><![CDATA[
d08345a2030b010aa1054d2653469d58937647a6a1bb023458a65da538206c33
cf941df7ea933ba7b93c60322017f9db9c904608fce2688b51028b5b912f9010
ae72802bf65778593c7270b20683b1587824eb4074e03323ccf0541b495a3757
f353a8424b6ceeaaec1898964d8a03e04e514a5b0ca143b57689a2a9f1c6c84d
535d1966adf900dfaf0dd045d2325c40150a07d602b65c60e62894c870ad5fc2
cb709e4d17d381806797b6cf118608e18c3facd0a0ac09d88ea73d4ed7e3b57c
            ]]></artwork>
          </figure>
        </t>
        <t>
          <figure align="center" anchor="fig:exampleNestedCBORDiagnostic"
                title='Signed and Encrypted CWT in CBOR diagnostic notation'>
            <artwork><![CDATA[
16(
  [
    / protected / h'a2030b010a',
    / unprotected / {
      / iv / 5: h'2653469d58937647a6a1bb0234'
    },
    / ciphertext / h'5da538206c33cf941df7ea933ba7b93c60322017f9d
                     b9c904608fce2688b51028b5b912f9010ae72802bf6
                     5778593c7270b20683b1587824eb4074e03323ccf05
                     41b495a3757f353a8424b6ceeaaec1898964d8a03e0
                     4e514a5b0ca143b57689a2a9f1c6c84d535d1966adf
                     900dfaf0dd045d2325c40150a07d602b65c60e62894
                     c870ad5fc2cb709e4d17d381806797b6cf118608e18
                     c3facd0a0ac09d88ea73d4ed7e3b57c'
  ]
)
            ]]></artwork>
          </figure>
          <figure align="center" anchor="fig:exampleNestedProtectedCBORDiagnostic"
                title='Protected headers in diagnostic notation'>
            <artwork align="left"><![CDATA[
{
  / content type / 3: 11, / cose-sign1 /
  / alg / 1: 10 / AES-CCM-16-64-128 /
}
            ]]></artwork>
          </figure>
        </t>
      </section>

    </section>

    <section anchor="Acknowledgements" title="Acknowledgements">
      <t>
	This specification is based on JSON Web Token (JWT) <xref target="RFC7519"/>,
	the authors of which also include Nat Sakimura and John Bradley.
	Ludwig Seitz and Göran Selander have made contributions the specification.
      </t>
      <!--
      <t>
	The following individuals contributed ideas,
	feedback, and wording that influenced this specification:
      </t>
      <t>
	TBD
      </t>
      -->
    </section>

    <section anchor="History" title="Document History">
      <t>[[ to be removed by the RFC Editor before publication as an RFC ]]</t>

      <t>
	-03
        <list style="symbols">
	  <t>
	    Reworked examples to include signed, MACed, encrypted, and nested CWTs.
	  </t>
	</list>
      </t>

      <t>
	-02
        <list style="symbols">
	  <t>
	    Added IANA registration for the application/cwt media type.
	  </t>
	  <t>
	    Clarified the nested CWT language.
	  </t>
	  <t>
	    Corrected nits identified by Ludwig Seitz.
	  </t>
	</list>
      </t>

      <t>
	-01
        <list style="symbols">
	  <t>
	    Added IANA registration for CWT Claims.
	  </t>
	  <t>
	    Added IANA registration for the application/cwt CoAP content-format type.
	  </t>
	  <t>
	    Added Samuel Erdtman as an editor.
	  </t>
	  <t>
	    Changed Erik's e-mail address.
	  </t>
	</list>
      </t>

      <t>
	-00
        <list style="symbols">
	  <t>
	    Created the initial working group version based on draft-wahlstroem-ace-cbor-web-token-00.
	  </t>
	</list>
      </t>

    </section>
  </back>
</rfc>
